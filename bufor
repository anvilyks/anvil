onLoad: async () => {
    function buildCidToBlobMap() {
    const cidToBlob = {};
    const assets = editor.AssetManager.getAll().models;
  
    for (const a of assets) {
      const name = a.get('name');
      const src = a.get('src');
      cidToBlob[`cid:${name}`] = src;
    }
  
    return cidToBlob;
  }
  
  function replaceCidWithBlob(components, cidToBlob) {
    for (const comp of components || []) {
      const src = comp.attributes?.src;
      if (src?.startsWith('cid:') && cidToBlob[src]) {
        comp.attributes.src = cidToBlob[src];
        console.log(`✅ Replaced ${src} → ${cidToBlob[src]}`);
      }
      if (comp.components) {
        replaceCidWithBlob(comp.components, cidToBlob);
      }
    }
  }

  const project = await window.load_files_callback(); // lub Anvil serwer
  await waitForAssetsReady(); // opcjonalnie — czekaj na AssetManager
  
  const cidToBlob = buildCidToBlobMap();
  
  for (const page of project.pages || []) {
    replaceCidWithBlob(page.components, cidToBlob);
  }

  return { project };
};
