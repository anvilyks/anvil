<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- ... -->
    <script src="https://unpkg.com/@grapesjs/studio-sdk/dist/index.umd.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@grapesjs/studio-sdk-plugins@latest/dist/rteTinyMce/index.umd.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@grapesjs/studio-sdk-plugins@latest/dist/layoutSidebarButtons/index.umd.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/@grapesjs/studio-sdk/dist/style.css"/>
  </head>
  <body>
    <div id="studio-editor" style="height: 100dvh"></div>
    <script>
      GrapesJsStudioSDK.createStudioEditor({
        root: '#studio-editor',
        licenseKey: 'dba694b816d74fceab2eeff0b998ae673a669c4573f64e799bf066048b5ba9d5',
        theme: 'dark',
        project: {
          type: 'email'
        },
        assets: {
          storageType: 'self',
          // Provide a custom upload handler for assets
          onUpload: async ({ files }) => {
            const body = new FormData();
            for (const file of files) {
              body.append('files', file);
            }
            const response = await fetch('ASSETS_UPLOAD_URL', { method: 'POST', body });
            const result = await response.json();
            // The expected result should be an array of assets, eg.
            // [{ src: 'ASSET_URL' }]
            return result;
          },
          // Provide a custom handler for deleting assets
          onDelete: async ({ assets }) => {
            const body = JSON.stringify(assets);
            await fetch('ASSETS_DELETE_URL', { method: 'DELETE', body });
          }
        },
        storage: {
          type: 'self',
          // Provide a custom handler for saving the project data.
          onSave: async ({ project }) => {
            const body = new FormData();
            body.append('project', JSON.stringify(project));
            await fetch("https://wilted-tremendous-east.anvil.app/_/api/save-template", {
              method: "POST",
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify({
                template_id: "template-0015",
                content: project
              })
            })
              .then(async res => {
                const contentType = res.headers.get("content-type");
                const isJson = contentType && contentType.includes("application/json");

                if (!res.ok) {
                  const text = await res.text();
                  throw new Error("Server error: " + text);
                }

                return isJson ? res.json() : res.text();
              })
              .then(data => {
                console.log("Zapis zakończony:", data);
              })
              .catch(err => {
                console.error("Błąd zapisu:", err.message);
              });

          },
          // Provide a custom handler for loading project data.
          onLoad: async () => {
            try {
              const res = await fetch("https://wilted-tremendous-east.anvil.app/_/api/get-template");
              if (!res.ok) throw new Error(`Fetch failed: ${res.status}`);
              const project = await res.json();
              console.log("Loaded project:", project);
              return { project };
            } catch (err) {
              console.error("onLoad error:", err);
              return { project: {} }; // fallback
            }
          },
          autosaveChanges: 100,
          autosaveIntervalMs: 10000
        },
        plugins: [
          StudioSdkPlugins_rteTinyMce.init({ /* Plugin options: https://app.grapesjs.com/docs-sdk/plugins/rte/tinymce */ }),
          StudioSdkPlugins_layoutSidebarButtons.init({ /* Plugin options: https://app.grapesjs.com/docs-sdk/plugins/layout/sidebar-buttons */ })
        ]
      });
    </script>
  </body>
  <html>
