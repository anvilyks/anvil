 // --- helpers ---
        function applyLockState(cmp, locked) {
          // znacznik wÅ‚asny
          cmp.set('locked', !!locked);

          // wyÅ‚Ä…cz wszystko co modyfikuje strukturÄ™/treÅ›Ä‡
          cmp.set({
            draggable: !locked,
            droppable: !locked,
            copyable:  !locked,
            removable: !locked,
            editable:  !locked,
            resizable: locked ? 0 : 1,   // brak uchwytÃ³w resize
          });

          // minimalny/niewidoczny toolbar gdy locked (opcjonalnie)
          if (locked) cmp.set('toolbar', []);
        }

        // szybki toggle dla aktualnie wybranego
        function toggleLockSelected(ed) {
          const cmp = ed.getSelected();
          if (!cmp) return;
          const locked = !cmp.get('locked');
          applyLockState(cmp, locked);
          console.log(locked ? 'ðŸ”’ locked' : 'ðŸ”“ unlocked', cmp);
        }

        // --- 1) Komenda do podpinania pod TwojÄ… kÅ‚Ã³dkÄ™ ---
        editor.Commands.add('core:toggle-lock', {
          run(ed) { toggleLockSelected(ed); }
        });

        const BLOCKED_CMDS = [
          'tlb-delete', 'core:component-delete',
          'tlb-clone',  'core:component-duplicate',
          'tlb-move',   'core:component-move',
        ];

        // wrapper na runCommand
        const _run = editor.runCommand.bind(editor);
        editor.runCommand = function(id, opts) {
          const sel = editor.getSelected();
          if (sel && sel.get('locked') && BLOCKED_CMDS.includes(id)) {
            console.warn('Blocked on locked component:', id);
            return;
          }
          return _run(id, opts);
        };

        editor.on('rte:enable', () => {
          const sel = editor.getSelected();
          if (sel?.get('locked')) {
            // natychmiast zamknij RTE
            editor.trigger('rte:disable');
          }
        });
        
        
        const FS_PATH = 'M9.5,13.09L10.91,14.5L6.41,19H10V21H3V14H5V17.59L9.5,13.09M10.91,9.5L9.5,10.91L5,6.41V10H3V3H10V5H6.41L10.91,9.5M14.5,13.09L19,17.59V14H21V21H14V19H17.59L13.09,14.5L14.5,13.09M13.09,9.5L17.59,5H14V3H21V10H19V6.41L14.5,10.91L13.09,9.5Z';
        const IP_PATH = d="M2 12H4V17H20V12H22V17C22 18.11 21.11 19 20 19H4C2.9 19 2 18.11 2 17V12M12 15L17.55 9.54L16.13 8.13L13 11.25V2H11V11.25L7.88 8.13L6.46 9.55L12 15Z"
        function removeFullscreenBtn(path) {
          const btn = document
            .querySelector(`.gs-cmp-editor-topbar svg path[d="${path}"]`)
            ?.closest('button');
          if (btn && btn.isConnected) {
            btn.remove();
            console.log('âœ… UsuniÄ™to przycisk fullscreen');
          }
        }
        removeFullscreenBtn(FS_PATH)
        removeFullscreenBtn(IP_PATH)
        new MutationObserver(removeFullscreenBtn)
          .observe(document, { childList: true, subtree: true });
