function replaceBlobToCustomInPages(project, blobToCustomMap) {
  if (!project?.pages) return;

  console.log("[REPLACE] ▶️ Start blob→custom replacement in pages");

  for (const page of project.pages) {
    for (const frame of page.frames || []) {
      recurseComponents(frame.component);
    }
  }

  function recurseComponents(component) {
    if (!component || typeof component !== 'object') return;

    // Bezpośredni src (na poziomie komponentu)
    if (component.src && blobToCustomMap[component.src]) {
      console.log("[REPLACE] 🔁 component.src:", component.src, "→", blobToCustomMap[component.src]);
      component.src = blobToCustomMap[component.src];
    }

    // src wewnątrz attributes
    if (component.attributes?.src && blobToCustomMap[component.attributes.src]) {
      console.log("[REPLACE] 🔁 component.attributes.src:", component.attributes.src, "→", blobToCustomMap[component.attributes.src]);
      component.attributes.src = blobToCustomMap[component.attributes.src];
    }

    // Rekurencyjnie komponenty
    if (Array.isArray(component.components)) {
      for (const child of component.components) {
        recurseComponents(child);
      }
    }
  }

  console.log("[REPLACE] ✅ Finished blob→custom replacement");
}
