const waitForAssets = (min = 1) =>
    new Promise((resolve) => {
      const check = () => {
        const assets = editor.AssetManager.getAll().models;
        if (assets.length >= min) {
          resolve(assets);
        } else {
          setTimeout(check, 100); // Sprawdza co 100ms
        }
      };
      check();
    });

  const assets = await waitForAssets(1); // lub np. 10

  console.log("✅ AssetManager gotowy:", assets.length, "assetów");

  // 📦 Załaduj projekt z backendu
  const project = await window.load_files_callback();
  console.log("📥 Projekt pobrany");

  // 🔄 Przywróć blob: z custom:
  restoreBlobURLs(project, assets);

  // 🔁 Zamień blob: → custom: przed zapisem
  const customToBlobMap = {};
  for (const a of assets) {
    const src = a.get("src");
    const name = a.get("name");
    if (src?.startsWith("blob:") && name) {
      customToBlobMap[`custom:anvil-assets/${name}`] = src;
    }
  }

  replaceBlobToCustomInPages(project, customToBlobMap);

  // 🔧 Debug: pokaż strukturę
  console.dir(project, { depth: null });

  // ⏳ Ładowanie projektu (setTimeout = opóźnienie na Canvas/pages)
  setTimeout(async () => {
    await editor.loadProjectData(project);
    console.log("✅ Projekt załadowany");
  }, 0);
